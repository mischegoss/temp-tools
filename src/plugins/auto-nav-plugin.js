// plugins/auto-nav-plugin.js
const path = require('path')

function slugify(text) {
  return text
    .toLowerCase()
    .replace(/[^a-z0-9 -]/g, '') // Remove special characters
    .replace(/\s+/g, '-') // Replace spaces with hyphens
    .replace(/-+/g, '-') // Replace multiple hyphens with single
    .trim('-') // Remove leading/trailing hyphens
}

function extractCategoriesFromSidebar(sidebarItems, baseUrl = '/actions') {
  const categories = []

  function processItems(items) {
    for (const item of items) {
      if (item.type === 'category') {
        // Generate the category slug from the label
        const categorySlug = slugify(item.label)

        // Create navigation item
        const navItem = {
          title: item.label,
          description: item.description || `Learn about ${item.label}`,
          link: `${baseUrl}/category/${categorySlug}`,
        }

        // Add custom properties if they exist (from _category_.yml)
        if (item.customProps) {
          if (item.customProps.description) {
            navItem.description = item.customProps.description
          }
        }

        categories.push(navItem)

        // Recursively process nested categories if needed
        if (item.items && item.items.length > 0) {
          processItems(item.items)
        }
      }
    }
  }

  processItems(sidebarItems)
  return categories
}

module.exports = function autoNavPlugin(context, options) {
  return {
    name: 'auto-nav-plugin',

    async loadContent() {
      // Just return empty content - we'll populate it in contentLoaded
      return {}
    },

    async contentLoaded({ content, actions, allContent }) {
      const { setGlobalData } = actions

      console.log(
        'üîç auto-nav-plugin: Available content keys:',
        Object.keys(allContent),
      )

      // Find the docs plugin content
      const docsPluginId = options.docsPluginId || 'actions'
      const docsContent =
        allContent[`docusaurus-plugin-content-docs-${docsPluginId}`]

      if (!docsContent) {
        console.warn(
          `auto-nav-plugin: Could not find docs content for plugin id: ${docsPluginId}`,
        )
        console.log('üîç Available content plugins:', Object.keys(allContent))
        setGlobalData({
          autoGeneratedNav: {
            navItems: [],
            sectionTitle:
              options.sectionTitle || 'Documentation quick navigation',
            exploreButton: {
              to: options.exploreButtonTo || '/actions/intro',
              text: options.exploreButtonText || 'Explore Docs',
            },
          },
        })
        return
      }

      console.log('‚úÖ auto-nav-plugin: Found docs content')

      // Extract sidebar structure from the current version
      const currentVersion =
        docsContent.versions?.find(v => v.versionName === 'current') ||
        docsContent.versions?.[0]

      if (!currentVersion || !currentVersion.sidebars) {
        console.warn('auto-nav-plugin: No sidebar data found')
        console.log(
          'üîç auto-nav-plugin: Available versions:',
          docsContent.versions?.map(v => v.versionName),
        )
        setGlobalData({
          autoGeneratedNav: {
            navItems: [],
            sectionTitle:
              options.sectionTitle || 'Documentation quick navigation',
            exploreButton: {
              to: options.exploreButtonTo || '/actions/intro',
              text: options.exploreButtonText || 'Explore Docs',
            },
          },
        })
        return
      }

      console.log(
        'üìã auto-nav-plugin: Available sidebars:',
        Object.keys(currentVersion.sidebars),
      )

      // Get the main sidebar
      const sidebarName =
        options.sidebarName || Object.keys(currentVersion.sidebars)[0]
      const sidebar = currentVersion.sidebars[sidebarName]

      console.log('üîç auto-nav-plugin: Looking for sidebar:', sidebarName)
      console.log('üìã auto-nav-plugin: Sidebar content:', sidebar)

      if (!sidebar) {
        console.warn(`auto-nav-plugin: Sidebar "${sidebarName}" not found`)
        setGlobalData({
          autoGeneratedNav: {
            navItems: [],
            sectionTitle:
              options.sectionTitle || 'Documentation quick navigation',
            exploreButton: {
              to: options.exploreButtonTo || '/actions/intro',
              text: options.exploreButtonText || 'Explore Docs',
            },
          },
        })
        return
      }

      // Extract categories and generate navigation data
      const navItems = extractCategoriesFromSidebar(
        sidebar,
        options.baseUrl || '/actions',
      )

      console.log('üéØ auto-nav-plugin: Found navigation items:', navItems)

      const autoNavData = {
        sectionTitle: options.sectionTitle || 'Documentation quick navigation',
        exploreButton: {
          to: options.exploreButtonTo || '/actions/intro',
          text: options.exploreButtonText || 'Explore Docs',
        },
        navItems,
        generatedAt: new Date().toISOString(),
      }

      // Make the auto-generated navigation data available globally
      setGlobalData({
        autoGeneratedNav: autoNavData,
      })

      console.log(
        `auto-nav-plugin: Generated ${navItems.length} navigation items`,
      )
    },
  }
}
